import React, { useEffect, useState, useRef } from 'react'import '../styles/App/App.scss'import { Transition, animated } from "react-spring";import AnimationContextProvider from '../context/animations/AnimationContext'import { ThemeProvider } from '../context/theme/ThemeContext'import Overlay from '../components/animation/Overlay'import styled from '@emotion/styled'import I18n from '../context/lib/i18n'import Head from 'next/head'import Header from '@/header/Header'import ScrollUp from '@/scrollers/ScrollUp'import HeaderMobile from '@/header/HeaderMobile'import { SnackbarProvider } from 'notistack'import { HeaderProvider } from '../context/navigation/HeaderContext'const GlobalStyle = styled('div')`              h1, h2, h3 {color: ${props => props.theme.fonts.header}}              h4, h5 {color: ${props => props.theme.fonts.subHeader}}              li, p, a{color:${props => props.theme.fonts.paragraph}}              background:${props => props.theme.layout}              `;function MyApp({Component, pageProps, router}) {    const firstUpdate = useRef(true); //Ref used to persist value for overlay animation    useEffect(() => {        if (firstUpdate.current) {            firstUpdate.current = false;            console.log(firstUpdate.current);            // alert("I SHOULD RELOAD");        }        console.log("I SHOULDNT RELOAD");    });    const [loadAnimation, setAnimation] = useState(false);    useEffect(() => setAnimation(true));    const items = [        {            id: router.route,            Component,            pageProps        }    ];    return (        <ThemeProvider>            <HeaderProvider>            <AnimationContextProvider>                <Head>                    <meta name="Description"                          content="ASRR creates innovative and art of the state software development"/>                    <title>ASRR</title>                </Head>                <I18n lngDict={pageProps.lngDict} locale={pageProps.lng}>                    <GlobalStyle>                        <Header/>                        <HeaderMobile/>                        <ScrollUp/>                        <Overlay loadAnimation={firstUpdate}/>                        <SnackbarProvider maxSnack={3}>                            <Transition                                items={items}                                keys={(item) => item.id}                                from={{ opacity: 0 }}                                initial={{ opacity: 0 }}                                enter={{ opacity: 1 }}                                leave={{ opacity: 0, position: "absolute" }}                            >                                {(styles, { pageProps, Component }) => (                                    <animated.div style={{ ...styles, width: "100%" }}>                                        <Component {...pageProps} />                                    </animated.div>                                )}                            </Transition>                        </SnackbarProvider>                    </GlobalStyle>                </I18n>            </AnimationContextProvider>            </HeaderProvider>        </ThemeProvider>    )}export default MyApp